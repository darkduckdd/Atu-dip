[{"C:\\Users\\mradi\\Desktop\\Atu dip\\src\\index.js":"1","C:\\Users\\mradi\\Desktop\\Atu dip\\src\\App.js":"2","C:\\Users\\mradi\\Desktop\\Atu dip\\src\\components\\Loader.js":"3","C:\\Users\\mradi\\Desktop\\Atu dip\\src\\components\\AppRouter.js":"4","C:\\Users\\mradi\\Desktop\\Atu dip\\src\\components\\Navbar.js":"5","C:\\Users\\mradi\\Desktop\\Atu dip\\src\\routes.js":"6","C:\\Users\\mradi\\Desktop\\Atu dip\\src\\utils\\consts.js":"7","C:\\Users\\mradi\\Desktop\\Atu dip\\src\\components\\Login.js":"8","C:\\Users\\mradi\\Desktop\\Atu dip\\src\\components\\Chat.js":"9","C:\\Users\\mradi\\Desktop\\Atu dip\\src\\components\\Video\\VideoChat.jsx":"10","C:\\Users\\mradi\\Desktop\\Atu dip\\src\\components\\Video\\VideoCall.js":"11","C:\\Users\\mradi\\Desktop\\Atu dip\\src\\components\\Video\\settings.js":"12","C:\\Users\\mradi\\Desktop\\Atu dip\\src\\components\\Video\\Controls.js":"13","C:\\Users\\mradi\\Desktop\\Atu dip\\src\\components\\Video\\Video.js":"14"},{"size":843,"mtime":1648283459624,"results":"15","hashOfConfig":"16"},{"size":616,"mtime":1648283478582,"results":"17","hashOfConfig":"16"},{"size":522,"mtime":1648283464165,"results":"18","hashOfConfig":"16"},{"size":879,"mtime":1648283476585,"results":"19","hashOfConfig":"16"},{"size":1068,"mtime":1610438133000,"results":"20","hashOfConfig":"16"},{"size":327,"mtime":1610438133000,"results":"21","hashOfConfig":"16"},{"size":70,"mtime":1610438133000,"results":"22","hashOfConfig":"16"},{"size":1148,"mtime":1610438133000,"results":"23","hashOfConfig":"16"},{"size":4395,"mtime":1648283462104,"results":"24","hashOfConfig":"16"},{"size":594,"mtime":1649517286437,"results":"25","hashOfConfig":"16"},{"size":2224,"mtime":1649517730419,"results":"26","hashOfConfig":"16"},{"size":514,"mtime":1649571929823,"results":"27","hashOfConfig":"16"},{"size":2016,"mtime":1648283465870,"results":"28","hashOfConfig":"16"},{"size":1058,"mtime":1644039920540,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1vml2ea",{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\mradi\\Desktop\\Atu dip\\src\\index.js",[],["63","64"],"C:\\Users\\mradi\\Desktop\\Atu dip\\src\\App.js",["65","66"],"import React, { useContext } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport AppRouter from \"./components/AppRouter\";\nimport \"./App.css\";\nimport { Context } from \"./index\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport Loader from \"./components/Loader\";\n\nconst App = () => {\n  const { auth } = useContext(Context);\n  const [user, loading, error] = useAuthState(auth);\n\n  if (loading) {\n    return <Loader />;\n  }\n\n  return (\n    <BrowserRouter>\n      <Navbar />\n      <AppRouter />\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","C:\\Users\\mradi\\Desktop\\Atu dip\\src\\components\\Loader.js",["67","68"],"import React from \"react\";\nimport { Button, Container, Grid } from \"@material-ui/core\";\nimport Box from \"@material-ui/core/Box\";\n\nconst Loader = () => {\n  return (\n    <Container>\n      <Grid\n        container\n        style={{ height: window.innerHeight - 50 }}\n        alignItems={\"center\"}\n        justify={\"center\"}\n      >\n        <Grid container alignItems={\"center\"} direction={\"column\"}>\n          <div className=\"lds-hourglass\"></div>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default Loader;\n","C:\\Users\\mradi\\Desktop\\Atu dip\\src\\components\\AppRouter.js",[],"C:\\Users\\mradi\\Desktop\\Atu dip\\src\\components\\Navbar.js",[],"C:\\Users\\mradi\\Desktop\\Atu dip\\src\\routes.js",[],"C:\\Users\\mradi\\Desktop\\Atu dip\\src\\utils\\consts.js",[],"C:\\Users\\mradi\\Desktop\\Atu dip\\src\\components\\Login.js",[],"C:\\Users\\mradi\\Desktop\\Atu dip\\src\\components\\Chat.js",["69"],"import React, { useContext, useState } from \"react\";\nimport { Context } from \"../index\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { Avatar, Button, Container, Grid } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\nimport Loader from \"./Loader\";\nimport firebase from \"firebase\";\nimport VideoChat from \"./Video/VideoChat\";\n\nconst Chat = () => {\n  const { auth, firestore } = useContext(Context);\n  const [user] = useAuthState(auth);\n  const [value, setValue] = useState(\"\");\n  const [messages, loading] = useCollectionData(\n    firestore.collection(\"messages\").orderBy(\"createdAt\")\n  );\n\n  const sendMessage = async () => {\n    firestore.collection(\"messages\").add({\n      uid: user.uid,\n      displayName: user.displayName,\n      photoURL: user.photoURL,\n      text: value,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n    });\n    setValue(\"\");\n  };\n\n  if (loading) {\n    return <Loader />;\n  }\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={9}>\n        <VideoChat />\n      </Grid>\n      <Grid item xs={3}>\n        <Grid\n          container\n          justify={\"flex-end\"}\n          direction={\"column\"}\n          style={{ height: window.innerHeight - 50, marginTop: 20 }}\n        >\n          <div\n            style={{\n              justify: \"flex-end\",\n              border: \"1px solid gray\",\n              overflowY: \"auto\",\n            }}\n          >\n            {messages.map((message) => (\n              <div\n                style={{\n                  margin: 10,\n                  border:\n                    user.uid === message.uid\n                      ? \"2px solid green\"\n                      : \"2px dashed red\",\n                  marginLeft: user.uid === message.uid ? \"auto\" : \"10px\",\n                  width: \"fit-content\",\n                  padding: 5,\n                }}\n              >\n                <Grid container>\n                  <Avatar src={message.photoURL} />\n                  <div>{message.displayName}</div>\n                </Grid>\n                <div>{message.text}</div>\n              </div>\n            ))}\n          </div>\n          <Grid\n            container\n            direction={\"column\"}\n            alignItems={\"flex-end\"}\n            style={{ height: \"20%\" }}\n          >\n            <TextField\n              fullWidth\n              rowsMax={2}\n              variant={\"outlined\"}\n              value={value}\n              onChange={(e) => setValue(e.target.value)}\n            />\n            <Button onClick={sendMessage} variant={\"outlined\"}>\n              Отправить\n            </Button>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n\n    //<Container>\n    /* <Grid\n        container\n        justify={\"flex-end\"}\n        direction={\"column\"}\n        width={\"187px\"}\n        //style={{ height: window.innerHeight - 50, marginTop: 20 }}\n      >\n \n        <div\n          style={{\n            justify:\"flex-end\",\n            width: \"20%\",\n            height: \"60vh\",\n            border: \"1px solid gray\",\n            overflowY: \"auto\",\n          }}\n        >\n          {messages.map((message) => (\n            <div\n              style={{\n                margin: 10,\n                border:\n                  user.uid === message.uid\n                    ? \"2px solid green\"\n                    : \"2px dashed red\",\n                marginLeft: user.uid === message.uid ? \"auto\" : \"10px\",\n                width: \"fit-content\",\n                padding: 5,\n              }}\n            >\n              <Grid container>\n                <Avatar src={message.photoURL} />\n                <div>{message.displayName}</div>\n              </Grid>\n              <div>{message.text}</div>\n            </div>\n          ))}\n        </div>\n        <Grid\n          container\n          direction={\"column\"}\n          alignItems={\"flex-end\"}\n          style={{ width: \"20%\", height: \"20%\" }}\n        >\n          <TextField\n            fullWidth\n            rowsMax={2}\n            variant={\"outlined\"}\n            value={value}\n            onChange={(e) => setValue(e.target.value)}\n          />\n          <Button onClick={sendMessage} variant={\"outlined\"}>\n            Отправить\n          </Button>\n        </Grid>\n      </Grid>\n    //</Container>*/\n  );\n};\n\nexport default Chat;\n","C:\\Users\\mradi\\Desktop\\Atu dip\\src\\components\\Video\\VideoChat.jsx",[],"C:\\Users\\mradi\\Desktop\\Atu dip\\src\\components\\Video\\VideoCall.js",["70"],"import { useState, useEffect } from \"react\";\nimport {\n  config,\n  useClient,\n  useMicrophoneAndCameraTracks,\n  channelName,\n} from \"./settings.js\";\nimport { Grid } from \"@material-ui/core\";\nimport Video from \"./Video\";\nimport Controls from \"./Controls\";\n\nexport default function VideoCall(props) {\n  const { setInCall } = props;\n  const [users, setUsers] = useState([]);\n  const [start, setStart] = useState(false);\n  const client = useClient();\n  const { ready, tracks } = useMicrophoneAndCameraTracks();\n\n  useEffect(() => {\n    let init = async (name) => {\n      client.on(\"user-published\", async (user, mediaType) => {\n        await client.subscribe(user, mediaType);\n        if (mediaType === \"video\") {\n          setUsers((prevUsers) => {\n            return [...prevUsers, user];\n          });\n        }\n        if (mediaType === \"audio\") {\n          user.audioTrack.play();\n        }\n      });\n\n      client.on(\"user-unpublished\", (user, mediaType) => {\n        if (mediaType === \"audio\") {\n          if (user.audioTrack) user.audioTrack.stop();\n        }\n        if (mediaType === \"video\") {\n          setUsers((prevUsers) => {\n            return prevUsers.filter((User) => User.uid !== user.uid);\n          });\n        }\n      });\n\n      client.on(\"user-left\", (user) => {\n        setUsers((prevUsers) => {\n          return prevUsers.filter((User) => User.uid !== user.uid);\n        });\n      });\n\n      try {\n        await client.join(config.appId, name, config.token, null);\n      } catch (error) {\n        console.log(\"error\");\n      }\n\n      if (tracks) await client.publish([tracks[0], tracks[1]]);\n      setStart(true);\n    };\n\n    if (ready && tracks) {\n      try {\n        init(channelName);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }, [channelName, client, ready, tracks]);\n\n  return (\n    <Grid container direction=\"column\" style={{ height: \"740px\" }}>\n      <Grid item style={{ height: \"5%\" }}>\n        {ready && tracks && (\n          <Controls tracks={tracks} setStart={setStart} setInCall={setInCall} />\n        )}\n      </Grid>\n      <Grid item style={{ height: \"95%\" }}>\n        {start && tracks && <Video tracks={tracks} users={users} />}\n      </Grid>\n    </Grid>\n  );\n}\n","C:\\Users\\mradi\\Desktop\\Atu dip\\src\\components\\Video\\settings.js",[],"C:\\Users\\mradi\\Desktop\\Atu dip\\src\\components\\Video\\Controls.js",[],"C:\\Users\\mradi\\Desktop\\Atu dip\\src\\components\\Video\\Video.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":12,"column":10,"nodeType":"77","messageId":"78","endLine":12,"endColumn":14},{"ruleId":"75","severity":1,"message":"79","line":12,"column":25,"nodeType":"77","messageId":"78","endLine":12,"endColumn":30},{"ruleId":"75","severity":1,"message":"80","line":2,"column":10,"nodeType":"77","messageId":"78","endLine":2,"endColumn":16},{"ruleId":"75","severity":1,"message":"81","line":3,"column":8,"nodeType":"77","messageId":"78","endLine":3,"endColumn":11},{"ruleId":"75","severity":1,"message":"82","line":4,"column":26,"nodeType":"77","messageId":"78","endLine":4,"endColumn":35},{"ruleId":"83","severity":1,"message":"84","line":67,"column":6,"nodeType":"85","endLine":67,"endColumn":42,"suggestions":"86"},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'Button' is defined but never used.","'Box' is defined but never used.","'Container' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'channelName'. Either exclude it or remove the dependency array. Outer scope values like 'channelName' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["89"],"no-global-assign","no-unsafe-negation",{"desc":"90","fix":"91"},"Update the dependencies array to be: [client, ready, tracks]",{"range":"92","text":"93"},[1780,1816],"[client, ready, tracks]"]